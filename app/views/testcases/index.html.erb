<%
# The following code is for adding the jstree library.
# It adds both the javascript library and the corresponding stylesheet.
# You need to put those files into assets into the plugin directy.
content_for :header_tags do %>
  <%= javascript_include_tag 'jstree', :plugin => 'red_jenkins' %>
  <%= stylesheet_link_tag 'default/style', :plugin => 'red_jenkins' %>
  <%= stylesheet_link_tag 'redjenkins', :plugin => 'red_jenkins' %>
<% end %>

<h2>Tests</h2>

<% # Button to create a new testcase %>
<p>
<%= link_to "Create a new manual testcase", new_project_testcase_path(@project), :class => 'icon icon-add'
#:onclick => 'showAndScrollTo("add-document", "document_title"); return false;' if User.current.allowed_to?(:add_documents, @project)
%>
</p>

<p>
Here you can see all testcases of your project:
</p>

<script type="text/javascript">
// After the document is initialized 
$(document).ready(function() {
  // $.jstree.defaults.core.themes.variant = "large";
  $('#testcasetree').jstree({
    'plugins' : [ "state", "wholerow" ],
    'core': {
      'check_callback': true
    }
  });
  // Fix for clicking links in the tree:
  $("#testcasetree ul").on("click","li.jstree-node a",function(){
    document.location.href = this;
  });
})
</script>
<div class="box tabular" id="testcasetree">
<%

# This method outputs a tree using ul-li-elements which should be wrapped
# by a div that can be transformed by jstree
def listing(map) %>
    <ul>
    <% map.each do |k, v|
        if v[:type] == "method" %>
          <li data-jstree='{"icon":"jstree-file"}' class="<%= v[:status].downcase %>">
        <%
          concat link_to v[:name], [@project, v[:content]]
        else %>
          <li data-jstree='{"opened":true}' class="<%
            v[:status].default = 0
            sum = v[:status].values.inject(:+)
            if v[:status]["passed"] == sum
              concat "passed"
            elsif v[:status]["failed"] >= 1
              concat "failed"
            end
            %>
          %>">
          <%= v[:name] %>
        <% end %>
        <% listing(v[:content]) if v[:content].is_a?(::Hash) %>
        </li>
    <% end %>
    </ul>
<% end

# This variable is used to build the testcase tree
storedTestcase = {}
# For each testcase t
@testcases.each do |t|
	# add t to the tree
    add storedTestcase, t.path.split("."), t 
end

# Output the tree
listing(storedTestcase)
%>
</div>

<%=link_to "Fetch newest testcases from Jenkins", jenkins_update_path(@project), :class => 'icon icon-reload'%>
